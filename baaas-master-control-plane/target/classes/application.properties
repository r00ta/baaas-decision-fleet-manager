# Support CORS for the Modeller UX
quarkus.http.cors=true
# swagger-ui custom endpoint
quarkus.swagger-ui.always-include=true
baaas.kafka.secret-name=${BAAAS_KAFKA_CREDENTIALS:baaas-ccp-kafka-credentials}
baaas.kafka.bootstrap-urls=${BAAAS_KAFKA_BOOTSTRAP_SERVERS}
baaas.mcp.urls.api-base=${BAAAS_MCP_API_BASE_URL}
# Cluster Control Plane (hardcoded for demo 2.0)
baaas.ccp.urls.dmn-jit=${BAAAS_CCP_DMN_JIT_URL}
baaas.ccp.urls.k8s-api=${BAAAS_CCP_K8S_URL:https://192.168.49.2:8443}
baaas.ccp.namespace=${BAAAS_CCP_NAMESPACE:default}
# Database
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${BAAAS_MCP_DB_USERNAME}
quarkus.datasource.password=${BAAAS_MCP_DB_PASSWORD}
quarkus.datasource.jdbc.url=jdbc:postgresql://${BAAAS_MCP_DB_HOST}:${BAAAS_MCP_DB_PORT:5432}/${BAAAS_MCP_DB_SCHEMA:baaas-mcp}
quarkus.datasource.jdbc.initial-size=10
quarkus.datasource.jdbc.min-size=10
quarkus.datasource.jdbc.max-size=50
quarkus.datasource.jdbc.leak-detection-interval=5M
quarkus.datasource.jdbc.transaction-isolation-level=read-committed
quarkus.datasource.jdbc.new-connection-sql=select 1;
quarkus.datasource.jdbc.validation-query-sql=select 1;
quarkus.hibernate-orm.jdbc.timezone=UTC
# Flyway
quarkus.flyway.connect-retries=10
quarkus.flyway.migrate-at-start=true
quarkus.flyway.validate-on-migrate=true
quarkus.flyway.ignore-missing-migrations=true
quarkus.flyway.create-schemas=true
# AWS
# S3 bucket config
baaas.mcp.s3.bucket.name=${BAAAS_MCP_AWS_S3_BUCKET}
quarkus.s3.endpoint-override=${BAAAS_MCP_AWS_ADDRESS}
quarkus.s3.aws.region=${BAAAS_MCP_AWS_REGION}
quarkus.s3.aws.credentials.type=${BAAAS_MCP_S3_BUCKET_CREDENTIALS_TYPE:default}
# Secrets Manager config
baaas.mcp.secrets-manager.aws.region=${BAAAS_MCP_AWS_REGION}
baaas.mcp.secrets-manager.aws.endpoint-override=${BAAAS_MCP_AWS_ADDRESS}
baaas.mcp.secrets-manager.aws.access-key-id=${AWS_ACCESS_KEY_ID}
baaas.mcp.secrets-manager.aws.secret-access-key=${AWS_SECRET_ACCESS_KEY}

# SSO
% quarkus.oidc.auth-server-url=${BAAAS_MCP_SSO_URL}
% quarkus.oidc.client-id=${BAAAS_MCP_SSO_CLIENT_ID}
% quarkus.oidc.credentials.secret=${BAAAS_MCP_SSO_CLIENT_SECRET}

# Native compilation
quarkus.native.additional-build-args=-H:ReflectionConfigurationFiles=reflection-config.json
## Dev Profile Overrides
# test
%dev.baaas.kafka.bootstrap-urls=${BAAAS_KAFKA_BOOTSTRAP_SERVERS:test}
%dev.baaas.ccp.urls.dmn-jit=http://localhost:9000/jitdmn
%dev.baaas.ccp.urls.k8s-api=https://192.168.49.2:8443
%dev.baaas.mcp.urls.api-base=http://localhost:8080
%dev.baaas.ccp.namespace=default
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://192.168.49.2:32286/baaas-mcp
%dev.quarkus.datasource.username=mcp
%dev.quarkus.datasource.password=mcp
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.bind-parameters=true
# aws s3 bucket config - dev
baaas.mcp.s3.bucket.name=jrota-baaas
quarkus.s3.endpoint-override=http://192.168.49.2:31025
quarkus.s3.aws.region=eu-south-1
quarkus.s3.aws.credentials.type=static
quarkus.s3.aws.credentials.static-provider.access-key-id=test-key
quarkus.s3.aws.credentials.static-provider.secret-access-key=test-secret
# AWS Secrets Manager config - dev
%dev.baaas.mcp.secrets-manager.aws.region=us-west-1
%dev.baaas.mcp.secrets-manager.aws.endpoint-override=http://localhost:4566
%dev.baaas.mcp.secrets-manager.aws.access-key-id=test-key
%dev.baaas.mcp.secrets-manager.aws.secret-access-key=test-secret

# SSO
%dev.quarkus.oidc.auth-server-url=http://192.168.49.2:30142/auth/realms/baaas
%dev.quarkus.oidc.client-id=baaas-mcp

# ManagedServices
%dev.baaas.mcp.managed-services.endpoint=http://localhost:9001

quarkus.log.level=TRACE